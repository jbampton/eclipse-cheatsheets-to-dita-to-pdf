<?xml version="1.0" encoding="UTF-8"?><!-- (c) Copyright IBM Corp. 2006 All Rights Reserved.  hosted on 
     Sourceforge.net. See the accompanying license.txt file for 
     applicable licenses.--><!-- (c) Copyright IBM Corp. 2006 All Rights Reserved. --><project xmlns:dita="http://dita-ot.sourceforge.net" name="DOST" default="init">
  
  <property file="${basedir}/local.properties"/>
  
  <!-- Initialize DITA-OT base directory -->
  <dirname property="ant.file.DOST.dir" file="${ant.file.DOST}"/>
  <condition property="dita.dir" value="${ant.file.DOST.dir}">
    <not>
      <isset property="dita.dir"/>
    </not>
  </condition>
  <condition property="dita.dir" value="${basedir}">
    <not>
      <isset property="dita.dir"/>
    </not>
  </condition>
    
  <path id="dost.class.path">
    <pathelement location="${dita.dir}${file.separator}plugins/org.dita.pdf2/lib/fo.jar"/>
    <pathelement location="${dita.dir}${file.separator}lib${file.separator}dost.jar"/>
  </path>
  
  <target name="init">
    <dita-ot-fail id="DOTA001F">
      <condition>
        <and>
          <not><equals arg1="${transtype}" arg2="troff" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="eclipsecontent" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="xhtml" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="html5" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="eclipsehelp" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="odt" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="pdf" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="pdf2" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="tocjs" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="wordrtf" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="docbook" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="htmlhelp" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="javahelp" casesensitive="false"/></not>
        </and>
      </condition>
      <param name="1" value="${transtype}"/>
    </dita-ot-fail>
    <condition property="clean.temp" value="true">
      <not><isset property="clean.temp"/></not>
    </condition>
    <condition property="clean-temp.skip">
      <isfalse value="${clean.temp}"/>
    </condition>
    <antcall>
      <target name="dita2${transtype}"/>
      <target name="clean-temp"/>
    </antcall>
  </target>
  
  <property name="dita.plugin.org.dita.troff.dir" location="${dita.dir}/plugins/org.dita.troff"/><property name="dita.plugin.org.dita.eclipsecontent.dir" location="${dita.dir}/plugins/org.dita.eclipsecontent"/><property name="dita.plugin.org.dita.eclipsehelp.dir" location="${dita.dir}/plugins/org.dita.eclipsehelp"/><property name="dita.plugin.org.dita.specialization.dita11.dir" location="${dita.dir}/plugins/org.dita.specialization.dita11"/><property name="dita.plugin.org.dita.xhtml.dir" location="${dita.dir}/plugins/org.dita.xhtml"/><property name="dita.plugin.org.oasis-open.dita.v1_2.dir" location="${dita.dir}/plugins/org.oasis-open.dita.v1_2"/><property name="dita.plugin.org.dita.odt.dir" location="${dita.dir}/plugins/org.dita.odt"/><property name="dita.plugin.org.dita.pdf2.dir" location="${dita.dir}/plugins/org.dita.pdf2"/><property name="dita.plugin.org.dita.specialization.dita132.dir" location="${dita.dir}/plugins/org.dita.specialization.dita132"/><property name="dita.plugin.com.sophos.tocjs.dir" location="${dita.dir}/plugins/com.sophos.tocjs"/><property name="dita.plugin.org.dita.wordrtf.dir" location="${dita.dir}/plugins/org.dita.wordrtf"/><property name="dita.plugin.org.dita.docbook.dir" location="${dita.dir}/plugins/org.dita.docbook"/><property name="dita.plugin.org.dita.specialization.eclipsemap.dir" location="${dita.dir}/plugins/org.dita.specialization.eclipsemap"/><property name="dita.plugin.org.dita.htmlhelp.dir" location="${dita.dir}/plugins/org.dita.htmlhelp"/><property name="dita.plugin.org.dita.base.dir" location="${dita.dir}"/><property name="dita.plugin.org.dita.javahelp.dir" location="${dita.dir}/plugins/org.dita.javahelp"/>
  

  <target name="dita2tocjs" depends="build-init, preprocess, tocjsInit, map2tocjs, topic2tocjs, tocjsDefaultOutput">
  </target>

  <target name="tocjsInit">
    <property name="html-version" value="html5"/>
    <condition property="dita.plugin.com.sophos.tocjs.copydefaults" value="true">
        <not>
            <isset property="output.file"/>
        </not>
    </condition>
    <property name="output.file" value="${output.dir}${file.separator}toctree.js"/>
    <property name="out.ext" value=".html"/>
  </target>

  <target name="topic2tocjs" if="noMap">
    <antcall target="dita.map.tocjs">
      
    </antcall>
    <echo>The TocJS output type only supports ditamap files as input.</echo>
  </target>

  <target name="map2tocjs" unless="noMap">
    <antcall target="dita.map.tocjs">
      <param name="input" value="${dita.temp.dir}${file.separator}${user.input.file}"/>
    </antcall>
  </target>

  <target name="dita.map.tocjs" description="generate merged for tocjs">
    <xslt in="${input}" out="${output.file}" style="${dita.plugin.com.sophos.tocjs.dir}/xsl/tocjs.xsl">
      <param name="contentwin" expression="${content.frame}" if="content.frame"/>
      <param name="htmlext" expression="${out.ext}"/>
      <xmlcatalog refid="dita.catalog"/>
    </xslt>
  </target>

  <target name="tocjsDefaultOutput" if="dita.plugin.com.sophos.tocjs.copydefaults">
      
      <antcall target="tocjsDefaultXhtmlOutput"/>
      <antcall target="tocjsDefaultFrameset"/>
      
      <copy todir="${output.dir}"><fileset dir="${dita.plugin.com.sophos.tocjs.dir}${file.separator}basefiles"><include name="**/*"/></fileset></copy>
  </target>

  <target name="tocjsDefaultXhtmlOutput" depends="dita.map.xhtml, copy-revflag, xhtml.topics, copy-css">
      
  </target>

  <target name="tocjsDefaultFrameset" if="dita.plugin.com.sophos.tocjs.copydefaults">
      
      <xslt basedir="${dita.temp.dir}" destdir="${output.dir}" includesfile="${dita.temp.dir}${file.separator}${user.input.file.listfile}" extension="${out.ext}" style="${dita.plugin.com.sophos.tocjs.dir}${file.separator}xsl${file.separator}frameset.xsl">
  	    <excludesfile name="${dita.temp.dir}${file.separator}${resourceonlyfile}" if="resourceonlyfile"/>
        <param name="OUTEXT" expression="${out.ext}" if="out.ext"/>
        <param name="CSSPATH" expression="${CSSPATH}" if="csspath"/>
        <xmlcatalog refid="dita.catalog"/>
      </xslt>
  </target>


  
  
    

  
  <import file="plugins/org.dita.troff/build_dita2troff.xml"/>

  <import file="plugins/org.dita.eclipsecontent/build_dita2eclipsecontent.xml"/>

  <import file="plugins/org.dita.xhtml/build_general.xml"/>
  <import file="plugins/org.dita.xhtml/build_dita2xhtml.xml"/>

  <import file="plugins/org.dita.eclipsehelp/build_dita2eclipsehelp.xml"/>

  <import file="plugins/org.dita.odt/build_dita2odt.xml"/>


  <import file="plugins/org.dita.pdf2/build.xml"/>


  <import file="plugins/org.dita.wordrtf/build_dita2wordrtf.xml"/>

  <import file="plugins/org.dita.docbook/build_dita2docbook.xml"/>

  <import file="plugins/org.dita.htmlhelp/build_dita2htmlhelp.xml"/>

  <import file="plugins/org.dita.base/build_init.xml"/>
  <import file="plugins/org.dita.base/build_preprocess.xml"/>

  <import file="plugins/org.dita.javahelp/build_dita2javahelp.xml"/>

  
  <target name="help">
    <echo level="info">Mandatory properties:</echo>
    <echo level="info"/>
    <echo level="info">  args.input=&lt;file&gt;</echo>
    <echo level="info">    Path and name of the input file.</echo>
    <echo level="info"/>
    <echo level="info">  transtype={docbook|eclipsecontent|eclipsehelp|html5|htmlhelp|javahelp|odt|pdf|pdf2|tocjs|troff|wordrtf|xhtml}</echo>
    <echo level="info">    Transformation type.</echo>
    <echo level="info"/>
    <echo level="info">Optional properties:</echo>
    <echo level="info"/>
    <echo level="info">  args.logdir=&lt;dir&gt;</echo>
    <echo level="info">    Log directory.</echo>
    <echo level="info"/>
    <echo level="info">  args.draft={yes|no}</echo>
    <echo level="info">    Specify whether to output draft info. Default is "no".</echo>
    <echo level="info"/>
    <echo level="info">  args.ftr=&lt;file&gt;</echo>
    <echo level="info">    File to be placed in the BODY running-footing area.</echo>
    <echo level="info"/>
    <echo level="info">  args.hdr=&lt;file&gt;</echo>
    <echo level="info">    File to be placed in the BODY running-heading area.</echo>
    <echo level="info"/>
    <echo level="info">  args.hdf=&lt;file&gt;</echo>
    <echo level="info">    File to be placed in the HEAD area.</echo>
    <echo level="info"/>
    <echo level="info">  args.csspath=&lt;file|url&gt;</echo>
    <echo level="info">    Path for CSS reference.</echo>
    <echo level="info"/>
    <echo level="info">  args.css=&lt;file&gt;</echo>
    <echo level="info">    User CSS file.</echo>
    <echo level="info"/>
    <echo level="info">  args.cssroot=&lt;dir&gt;</echo>
    <echo level="info">    Root directory for user specified CSS file.</echo>
    <echo level="info"/>
    <echo level="info">  args.copycss={yes|no}</echo>
    <echo level="info">    Copy user specified CSS files. Default is "no".</echo>
    <echo level="info"/>
    <echo level="info">  args.indexshow={yes|no}</echo>
    <echo level="info">    Index entries should display within the body of the text itself. Default is "no".</echo>
    <echo level="info"/>
    <echo level="info">  args.outext=&lt;ext&gt;</echo>
    <echo level="info">    Output file extension for generated XHTML files. Default is ".html".</echo>
    <echo level="info"/>
    <echo level="info">  args.xsl=&lt;file&gt;</echo>
    <echo level="info">    XSLT file used to replace the default XSLT file.</echo>
    <echo level="info"/>
    <echo level="info">  args.xsl.pdf=&lt;file&gt;</echo>
    <echo level="info">    XSLT file used to replace the default XSLT file when transforming PDF.</echo>
    <echo level="info"/>
    <echo level="info">  args.odt.include.rellinks={none|all|nofamily}</echo>
    <echo level="info">    Determine which links are included in the ODT. Default is "none".</echo>
    <echo level="info"/>
    <echo level="info">  args.javahelp.toc=&lt;file&gt;</echo>
    <echo level="info">    Root file name of the output javahelp toc file in javahelp transformation. Default is the name of the input ditamap file.</echo>
    <echo level="info"/>
    <echo level="info">  args.javahelp.map=&lt;file&gt;</echo>
    <echo level="info">    Root file name of the output javahelp map file in javahelp transformation. Default is the name of the input ditamap file.</echo>
    <echo level="info"/>
    <echo level="info">  args.eclipsehelp.toc=&lt;file&gt;</echo>
    <echo level="info">    Root file name of the output eclipsehelp toc file in eclipsehelp transformation. Default is the name of the input ditamap file.</echo>
    <echo level="info"/>
    <echo level="info">  args.eclipsecontent.toc=&lt;file&gt;</echo>
    <echo level="info">    Root file name of the output Eclipse content provider toc file in eclipsecontent transformation. Default is the name of the input ditamap file.</echo>
    <echo level="info"/>
    <echo level="info">  args.debug={yes|no}</echo>
    <echo level="info">    Extra debug information should be included in the log. Default is "no".</echo>
    <echo level="info"/>
    <echo level="info">  args.grammar.cache={yes|no}</echo>
    <echo level="info">    Use grammar pool caching when parsing dita files. Default is "yes".</echo>
    <echo level="info"/>
    <echo level="info">  args.odt.img.embed={yes|no}</echo>
    <echo level="info">    Embedding images as binary data in ODT transform. Default is "yes".</echo>
    <echo level="info"/>
    <echo level="info">  args.xhtml.toc=&lt;file&gt;</echo>
    <echo level="info">    Root file name of the output XHTML toc file in XHTML transformation.</echo>
    <echo level="info"/>
    <echo level="info">  args.xhtml.classattr={yes|no}</echo>
    <echo level="info">    DITA element names and ancestry are included in XHTML class attributes. Default is "yes".</echo>
    <echo level="info"/>
    <echo level="info">  args.gen.task.lbl={YES|NO}</echo>
    <echo level="info">    DITA Task sections should get headings. Default is "NO".</echo>
    <echo level="info"/>
    <echo level="info">  artlbl={yes|no}</echo>
    <echo level="info">    Specify whether to output artwork filenames.</echo>
    <echo level="info"/>
    <echo level="info">  basedir=&lt;dir&gt;</echo>
    <echo level="info">    Working directory.</echo>
    <echo level="info"/>
    <echo level="info">  clean.temp={yes|no}</echo>
    <echo level="info">    Clean the temp directory before each build. Default is "yes".</echo>
    <echo level="info"/>
    <echo level="info">  dita.dir=&lt;dir&gt;</echo>
    <echo level="info">    Toolkit's home directory.</echo>
    <echo level="info"/>
    <echo level="info">  dita.temp.dir=&lt;dir&gt;</echo>
    <echo level="info">    Temporary directory.</echo>
    <echo level="info"/>
    <echo level="info">  args.filter=&lt;file&gt;</echo>
    <echo level="info">    Name of the file that contains the filter/flaggin/revision information.</echo>
    <echo level="info"/>
    <echo level="info">  generate.copy.outer={1|3}</echo>
    <echo level="info">    Specify how to deal with the overflowing dita/topic files. Default is "1".</echo>
    <echo level="info"/>
    <echo level="info">  onlytopic.in.map={true|false}</echo>
    <echo level="info">    Make dita processor only resolve dita/topic files which are referenced by primary ditamap files. Default is "false".</echo>
    <echo level="info"/>
    <echo level="info">  out.dir=&lt;dir&gt;</echo>
    <echo level="info">    Output directory.</echo>
    <echo level="info"/>
    <echo level="info">  outer.control={fail|warn|quiet}</echo>
    <echo level="info">    Respond to the overflowing dita/topic files. Default is "warn".</echo>
    <echo level="info"/>
    <echo level="info">  retain.topic.fo</echo>
    <echo level="info">    Temporary FO file should be preserved in the output directory. Specify any value, such as "yes", to preserve the file.</echo>
    <echo level="info"/>
    <echo level="info">  validate={true|false}</echo>
    <echo level="info">    Input files are validated. Default is "true".</echo>
  </target>

</project>